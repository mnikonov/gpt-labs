<UserControl
    x:Class="Gpt.Labs.Controls.MessagesControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Gpt.Labs.Controls"
    xmlns:models="using:Gpt.Labs.Models" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid>
        <ListView x:Name="MessagesList" IsItemClickEnabled="False" Padding="0 12 0 126"
                  SelectionMode="{x:Bind ViewModel.MultiSelectModeEnabled, Converter={StaticResource ListViewSelectionModeConverter}, ConverterParameter='None', Mode=OneWay}"
                  ItemsSource="{x:Bind ViewModel.ItemsCollection, Mode=OneWay}"
                  SelectionChanged="OnChatListSelectionChanged">
                
            <ListView.Resources>
                <SolidColorBrush x:Key="ListViewItemBackgroundPointerOver" Color="Transparent" />
                <SolidColorBrush x:Key="ListViewItemBackgroundSelected" Color="Transparent" />
                <SolidColorBrush x:Key="ListViewItemBackgroundSelectedPointerOver" Color="Transparent" />
                <SolidColorBrush x:Key="ListViewItemBackgroundPressed" Color="Transparent" />
                <SolidColorBrush x:Key="ListViewItemBackgroundSelectedPressed" Color="Transparent" />
            </ListView.Resources>
                
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="models:OpenAIMessage">
                    <controls:OpenAiMessageControl Style="{x:Bind Role, Converter={StaticResource OpenAiMessageStyleConverter}}"/>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsStackPanel VerticalAlignment="Bottom" ItemsUpdatingScrollMode="KeepLastItemInView" MaxWidth="1000"/>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem" BasedOn="{StaticResource DefaultListViewItemStyle}">
                    <Setter Property="Margin" Value="0 3" />
                    <Setter Property="Padding" Value="12 0" />
                    <Setter Property="MinHeight" Value="32" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

        <Grid VerticalAlignment="Bottom" Padding="12"
                SizeChanged="OnMessagePanelSizeChanged">
            <ContentControl x:Name="MessagePanel" HorizontalAlignment="Stretch" MaxWidth="800" HorizontalContentAlignment="Stretch"
                IsEnabled="{x:Bind IsMessagePanelEnabled, Mode=OneWay}">

                <ContentControl.Resources>
                    <ResourceDictionary Source="ms-appx:///Styles/CommandBarBigResources.xaml"/>
                </ContentControl.Resources>

                <Grid Background="{ThemeResource AcrylicBackgroundFillColorDefaultBrush}" CornerRadius="4">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="50"></RowDefinition>
                    </Grid.RowDefinitions>

                    
                    <TextBox x:Name="MessageTextBox" Grid.Row="0" Grid.RowSpan="2" TextWrapping="Wrap" AcceptsReturn="True" 
                            Padding="12 6 12 50"
                            CornerRadius="4"
                            MaxHeight="244" 
                            MinHeight="102"
                            ScrollViewer.VerticalScrollBarVisibility="Hidden"
                            Text="{x:Bind ViewModel.Message, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            PreviewKeyDown="OnMessageTextBoxPreviewKeyDown"
                            PreviewKeyUp="OnMessageTextBoxPreviewKeyUp">
                    </TextBox>

                    <Grid Grid.Row="1" VerticalAlignment="Bottom">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <Border BorderThickness="0 1 0 0" Margin="6 0" Grid.ColumnSpan="2"
                                BorderBrush="{ThemeResource TextControlBorderBrush}">
                        </Border>

                        <CommandBar Margin="6 4 6 4" HorizontalAlignment="Left" Grid.Column="0">
                            <AppBarToggleButton x:Name="ChatSettingsToggle" x:Uid="ChatSettingsToggle" 
                                                IsChecked="{x:Bind ViewModel.IsPanelExpanded(ViewModel.ExpandedPanels, 1), Mode=OneWay }" 
                                                Click="OnShowHideChatSettingsClick"
                                                x:Load="{x:Bind ShowSettingsButton, Mode=OneWay}">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Uid="ChatSettingsToolTip" Content="Chat settings" />
                                </ToolTipService.ToolTip>
                                <AppBarToggleButton.Icon>
                                    <FontIcon Glyph="&#xe713;"/>
                                </AppBarToggleButton.Icon>
                            </AppBarToggleButton>

                            
                            <AppBarToggleButton x:Uid="SelectMulti" x:Name="SelectMulti" Label="Select multiple" 
                                    IsChecked="{x:Bind ViewModel.MultiSelectModeEnabled, FallbackValue=False, Mode=OneWay}"
                                    IsEnabled="{x:Bind ViewModel.ItemsCollection.Count, Converter={StaticResource CountToBooleanConverter}, ConverterParameter='>', Mode=OneWay}"
                                    Click="OnSelectMultiClick">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Uid="SelectMultiMessagesToolTip" Content="Select multiple" />
                                </ToolTipService.ToolTip>
                                <AppBarToggleButton.Icon>
                                    <FontIcon Glyph="&#xe762;"/>
                                </AppBarToggleButton.Icon>
                            </AppBarToggleButton>
                
                            <AppBarToggleButton x:Uid="SelectAll" x:Name="SelectAll" Label="Select all" 
                                        Visibility="{x:Bind ViewModel.MultiSelectModeEnabled, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed, Mode=OneWay}"
                                        IsEnabled="{x:Bind ViewModel.ItemsCollection.Count, Converter={StaticResource CountToBooleanConverter}, ConverterParameter='>', Mode=OneWay}"
                                        Click="OnSelectAllClick">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Uid="SelectAllToolTip" Content="Select all" />
                                </ToolTipService.ToolTip>
                                <AppBarToggleButton.Icon>
                                    <FontIcon Glyph="&#xe8b3;"/>
                                </AppBarToggleButton.Icon>
                            </AppBarToggleButton>
                            
                            <AppBarSeparator Visibility="{x:Bind ViewModel.MultiSelectModeEnabled, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed, Mode=OneWay}"/>

                            <AppBarButton x:Uid="CopyMulti" x:Name="CopyMulti" Label="Copy multiple" 
                                            Visibility="{x:Bind ViewModel.MultiSelectModeEnabled, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed, Mode=OneWay}"
                                            Click="OnCopyMultiClick">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Uid="CopyMultiMessagesToolTip" Content="Copy multiple" />
                                </ToolTipService.ToolTip>
                                <AppBarButton.Icon>
                                    <FontIcon Glyph="&#xe8c8;"/>
                                </AppBarButton.Icon>
                            </AppBarButton>
                            
                                <AppBarButton x:Uid="ShareMulti" x:Name="ShareMulti" Label="Share multiple" 
                                            Visibility="{x:Bind ViewModel.MultiSelectModeEnabled, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed, Mode=OneWay}"
                                            Click="OnShareMultiClick">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Uid="ShareMultiMessagesToolTip" Content="Share multiple" />
                                </ToolTipService.ToolTip>
                                <AppBarButton.Icon>
                                    <FontIcon Glyph="&#xe72d;"/>
                                </AppBarButton.Icon>
                            </AppBarButton>
                            
                            <AppBarButton x:Uid="DeleteMulti" x:Name="DeleteMulti" Label="Delete multiple" 
                                            Visibility="{x:Bind ViewModel.MultiSelectModeEnabled, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed, Mode=OneWay}"
                                            Click="OnDeleteMultiClick">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Uid="DeleteMultiMessagesToolTip" Content="Delete multiple" />
                                </ToolTipService.ToolTip>
                                <AppBarButton.Icon>
                                    <FontIcon Glyph="&#xe74d;"/>
                                </AppBarButton.Icon>
                            </AppBarButton>                           
                            
                            <AppBarSeparator Visibility="{x:Bind ViewModel.MultiSelectModeEnabled, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed, Mode=OneWay}"/>
                            
                            <AppBarToggleButton x:Name="RecordMessage" Click="{x:Bind ViewModel.StartStopRecord}" IsChecked="{x:Bind ViewModel.IsRecording, Mode=OneWay}">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Uid="RecordMessageToolTip" Content="Record" />
                                </ToolTipService.ToolTip>
                                <AppBarToggleButton.Icon>
                                    <FontIcon Glyph="&#xe720;"/>
                                </AppBarToggleButton.Icon>
                            </AppBarToggleButton>
                        </CommandBar>
                        
                        
                        <CommandBar Margin="6 4 6 4" HorizontalAlignment="Right" Grid.Column="1">
                            <AppBarButton x:Name="SendImage" x:Uid="SendImage" 
                                            x:Load="{x:Bind ViewModel.Chat.Type, Converter={StaticResource EnumToBoolConverter}, ConverterParameter='Image', Mode=OneWay}"
                                            Click="{x:Bind CreateImageVariation}">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Uid="SendImageToolTip" Content="Create image variation" />
                                </ToolTipService.ToolTip>
                                <AppBarButton.Icon>
                                    <FontIcon Glyph="&#xee71;"/>
                                </AppBarButton.Icon>
                            </AppBarButton>
                            
                            <AppBarButton x:Name="SendMessage" x:Uid="SendMessage" 
                                            Click="{x:Bind SendChatMessage}">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Uid="SendMessageToolTip" Content="Send" />
                                </ToolTipService.ToolTip>
                                <AppBarButton.Icon>
                                    <FontIcon Glyph="&#xe724;"/>
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>
                    </Grid>
                    
                    <ProgressBar x:Name="MessageProgress" Visibility="Collapsed" IsIndeterminate="True" Grid.Row="1" Height="1" CornerRadius="4" MinHeight="1" Margin="3 0" VerticalAlignment="Bottom"></ProgressBar>

                </Grid>
            </ContentControl>
        </Grid>
    </Grid>
</UserControl>
